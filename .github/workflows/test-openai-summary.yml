name: Test OpenAI Summarization

on:
  workflow_dispatch:  # ✅ Manually trigger this action

permissions:
  contents: read

jobs:
  summarize-text:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ✅ Ensures full commit history

      - name: Call OpenAI for Summarization
        run: |
          echo "Calling OpenAI API..."
          
          # Escape special characters in input text
          ESCAPED_TEXT=$(echo "$INPUT_TEXT" | jq -Rs .)

          # Construct JSON Payload
          JSON_PAYLOAD=$(jq -n --arg text "$ESCAPED_TEXT" '{
            model: "gpt-4o",
            messages: [
              { role: "system", content: "You are a helpful assistant that summarizes text." },
              { role: "user", content: "Summarize this: \($text)" }
            ]
          }')

          echo "Generated JSON Payload:"
          echo "$JSON_PAYLOAD" | jq .  # ✅ Print payload for debugging

          # Send request to OpenAI
          RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -H "Content-Type: application/json" \
            --data-raw "$JSON_PAYLOAD")

          echo "Raw OpenAI Response: $RESPONSE"

          # Extract summary from API response
          SUMMARY=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // "AI failed to generate a summary."')

          # Print extracted summary
          echo "Summary: $SUMMARY"
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          INPUT_TEXT: "GitHub Actions automate workflows. They allow developers to automate software development tasks such as CI/CD, testing, and deployment."
